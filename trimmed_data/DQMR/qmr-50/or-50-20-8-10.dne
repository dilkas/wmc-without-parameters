// ~->[DNET-1]->~
// parents = 50, children = 50
// random seed = 1777628346
bnet toy_qmr_problem { //100 variables and 100 distributions 
visual V1 {
	defdispform = BELIEFBARS;
	nodelabeling = TITLE;
	nodefont = font {shape= "Arial"; size= 10;};
	linkfont = font {shape= "Arial"; size= 9;};
	windowposn = (14, 9, 441, 280);
	CommentShowing = TRUE;
	CommentWindowPosn = (14, 279, 717, 553);
	resolution = 72;
	drawingbounds = (15000, 15000);
	showpagebreaks = FALSE;
	usegrid = TRUE;
	gridspace = (6, 6);
	PrinterSetting A {
		margins = (1270, 1270, 1270, 1270);
		landscape = FALSE;
		magnify = 1;
	};
};
node p_1{
	kind = NATURE;
	discrete = TRUE;
	chance = CHANCE;
	states = (true, false);
	parents = ();
	probs = (0.2, 0.8);
	visual V1 {
		center = (100, 100);
		height = 2;
	};
};
node p_3{
	kind = NATURE;
	discrete = TRUE;
	chance = CHANCE;
	states = (true, false);
	parents = ();
	probs = (0.2, 0.8);
	visual V1 {
		center = (200, 100);
		height = 2;
	};
};
node p_7{
	kind = NATURE;
	discrete = TRUE;
	chance = CHANCE;
	states = (true, false);
	parents = ();
	probs = (0.2, 0.8);
	visual V1 {
		center = (400, 100);
		height = 2;
	};
};
node p_8{
	kind = NATURE;
	discrete = TRUE;
	chance = CHANCE;
	states = (true, false);
	parents = ();
	probs = (0.2, 0.8);
	visual V1 {
		center = (450, 100);
		height = 2;
	};
};
node p_10{
	kind = NATURE;
	discrete = TRUE;
	chance = CHANCE;
	states = (true, false);
	parents = ();
	probs = (0.2, 0.8);
	visual V1 {
		center = (550, 100);
		height = 2;
	};
};
node p_15{
	kind = NATURE;
	discrete = TRUE;
	chance = CHANCE;
	states = (true, false);
	parents = ();
	probs = (0.2, 0.8);
	visual V1 {
		center = (800, 100);
		height = 2;
	};
};
node p_16{
	kind = NATURE;
	discrete = TRUE;
	chance = CHANCE;
	states = (true, false);
	parents = ();
	probs = (0.2, 0.8);
	visual V1 {
		center = (850, 100);
		height = 2;
	};
};
node p_17{
	kind = NATURE;
	discrete = TRUE;
	chance = CHANCE;
	states = (true, false);
	parents = ();
	probs = (0.2, 0.8);
	visual V1 {
		center = (900, 100);
		height = 2;
	};
};
node p_20{
	kind = NATURE;
	discrete = TRUE;
	chance = CHANCE;
	states = (true, false);
	parents = ();
	probs = (0.2, 0.8);
	visual V1 {
		center = (1050, 100);
		height = 2;
	};
};
node p_29{
	kind = NATURE;
	discrete = TRUE;
	chance = CHANCE;
	states = (true, false);
	parents = ();
	probs = (0.2, 0.8);
	visual V1 {
		center = (1500, 100);
		height = 2;
	};
};
node p_30{
	kind = NATURE;
	discrete = TRUE;
	chance = CHANCE;
	states = (true, false);
	parents = ();
	probs = (0.2, 0.8);
	visual V1 {
		center = (1550, 100);
		height = 2;
	};
};
node p_34{
	kind = NATURE;
	discrete = TRUE;
	chance = CHANCE;
	states = (true, false);
	parents = ();
	probs = (0.2, 0.8);
	visual V1 {
		center = (1750, 100);
		height = 2;
	};
};
node p_36{
	kind = NATURE;
	discrete = TRUE;
	chance = CHANCE;
	states = (true, false);
	parents = ();
	probs = (0.2, 0.8);
	visual V1 {
		center = (1850, 100);
		height = 2;
	};
};
node p_39{
	kind = NATURE;
	discrete = TRUE;
	chance = CHANCE;
	states = (true, false);
	parents = ();
	probs = (0.2, 0.8);
	visual V1 {
		center = (2000, 100);
		height = 2;
	};
};
node p_43{
	kind = NATURE;
	discrete = TRUE;
	chance = CHANCE;
	states = (true, false);
	parents = ();
	probs = (0.2, 0.8);
	visual V1 {
		center = (2200, 100);
		height = 2;
	};
};
node p_45{
	kind = NATURE;
	discrete = TRUE;
	chance = CHANCE;
	states = (true, false);
	parents = ();
	probs = (0.2, 0.8);
	visual V1 {
		center = (2300, 100);
		height = 2;
	};
};
node p_46{
	kind = NATURE;
	discrete = TRUE;
	chance = CHANCE;
	states = (true, false);
	parents = ();
	probs = (0.2, 0.8);
	visual V1 {
		center = (2350, 100);
		height = 2;
	};
};
node p_48{
	kind = NATURE;
	discrete = TRUE;
	chance = CHANCE;
	states = (true, false);
	parents = ();
	probs = (0.2, 0.8);
	visual V1 {
		center = (2450, 100);
		height = 2;
	};
};
node p_49{
	kind = NATURE;
	discrete = TRUE;
	chance = CHANCE;
	states = (true, false);
	parents = ();
	probs = (0.2, 0.8);
	visual V1 {
		center = (2500, 100);
		height = 2;
	};
};
node c_21{
	kind = NATURE;
	discrete = TRUE;
	chance = CHANCE;
	states = (true, false);
	parents = ( p_7,  p_39,  p_15,  p_8);
	probs = (((((1, 0), (1, 0)), ((1, 0), (1, 0))), (((1, 0), (1, 0)), ((1, 0), (1, 0)))), ((((1, 0), (1, 0)), ((1, 0), (1, 0))), (((1, 0), (1, 0)), ((1, 0), (0, 1)))));
	visual V1 {
		center = (1100, 300);
		height = 2;
	};
};
node c_25{
	kind = NATURE;
	discrete = TRUE;
	chance = CHANCE;
	states = (true, false);
	parents = ( p_1,  p_49,  p_48,  p_10);
	probs = (((((1, 0), (1, 0)), ((1, 0), (1, 0))), (((1, 0), (1, 0)), ((1, 0), (1, 0)))), ((((1, 0), (1, 0)), ((1, 0), (1, 0))), (((1, 0), (1, 0)), ((1, 0), (0, 1)))));
	visual V1 {
		center = (1300, 300);
		height = 2;
	};
};
node c_26{
	kind = NATURE;
	discrete = TRUE;
	chance = CHANCE;
	states = (true, false);
	parents = ( p_16,  p_46,  p_30,  p_34);
	probs = (((((1, 0), (1, 0)), ((1, 0), (1, 0))), (((1, 0), (1, 0)), ((1, 0), (1, 0)))), ((((1, 0), (1, 0)), ((1, 0), (1, 0))), (((1, 0), (1, 0)), ((1, 0), (0, 1)))));
	visual V1 {
		center = (1350, 300);
		height = 2;
	};
};
node c_31{
	kind = NATURE;
	discrete = TRUE;
	chance = CHANCE;
	states = (true, false);
	parents = ( p_20,  p_29,  p_16,  p_10);
	probs = (((((1, 0), (1, 0)), ((1, 0), (1, 0))), (((1, 0), (1, 0)), ((1, 0), (1, 0)))), ((((1, 0), (1, 0)), ((1, 0), (1, 0))), (((1, 0), (1, 0)), ((1, 0), (0, 1)))));
	visual V1 {
		center = (1600, 300);
		height = 2;
	};
};
node c_37{
	kind = NATURE;
	discrete = TRUE;
	chance = CHANCE;
	states = (true, false);
	parents = ( p_43,  p_3,  p_46,  p_48);
	probs = (((((1, 0), (1, 0)), ((1, 0), (1, 0))), (((1, 0), (1, 0)), ((1, 0), (1, 0)))), ((((1, 0), (1, 0)), ((1, 0), (1, 0))), (((1, 0), (1, 0)), ((1, 0), (0, 1)))));
	visual V1 {
		center = (1900, 300);
		height = 2;
	};
};
node c_49{
	kind = NATURE;
	discrete = TRUE;
	chance = CHANCE;
	states = (true, false);
	parents = ( p_29,  p_45,  p_17,  p_36);
	probs = (((((1, 0), (1, 0)), ((1, 0), (1, 0))), (((1, 0), (1, 0)), ((1, 0), (1, 0)))), ((((1, 0), (1, 0)), ((1, 0), (1, 0))), (((1, 0), (1, 0)), ((1, 0), (0, 1)))));
	visual V1 {
		center = (2500, 300);
		height = 2;
	};
};
};
